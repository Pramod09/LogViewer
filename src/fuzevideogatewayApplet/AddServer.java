package fuzevideogatewayApplet;

import java.awt.Toolkit;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author GS-1062
 */
public class AddServer extends javax.swing.JFrame {

    /**
     * Creates new form AddServer
     */
    public AddServer() {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("fuzelog.png")));
        String path = System.getProperty("user.name");
        File f = new File(path+"fuze.odb");
        try{
            Connection conn=DriverManager.getConnection("jdbc:ucanaccess://"+f);
            Statement s = null;
            s = conn.createStatement();
            ResultSet rs;
            rs = s.executeQuery("select * from GROUPS"); 
                
            while (rs.next()) {
                combox_group.addItem(rs.getString("GROUP_NAME"));
            }
        }
        catch(Exception e){
            System.out.print("error "+e);
        }
    }


    @Override
    public void setDefaultCloseOperation(int operation) {
      // super.setDefaultCloseOperation(operation); //To change body of generated methods, choose Tools | Templates.
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_servername = new javax.swing.JLabel();
        lbl_loginname = new javax.swing.JLabel();
        lbl_password = new javax.swing.JLabel();
        txt_servername = new javax.swing.JTextField();
        txt_loginname = new javax.swing.JTextField();
        txt_password = new javax.swing.JPasswordField();
        btn_save = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txt_ipadd = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        combox_group = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        lbl_servername.setText("Server Name");

        lbl_loginname.setText("Login Name");

        lbl_password.setText("Password");

        txt_servername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_servernameActionPerformed(evt);
            }
        });

        btn_save.setText("Save");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        jLabel1.setText("IP address");

        jLabel2.setText("Group");

        combox_group.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combox_groupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(1, 1, 1))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_password, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_servername)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lbl_loginname, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txt_ipadd, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txt_loginname, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_password, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_servername, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(combox_group, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(106, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_servername)
                    .addComponent(txt_servername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_ipadd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combox_group, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_loginname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_loginname))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_password))
                .addGap(18, 18, 18)
                .addComponent(btn_save)
                .addGap(16, 16, 16))
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void txt_servernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_servernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_servernameActionPerformed

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        // TODO add your handling code here:
        String path = System.getProperty("user.name");
        File f = new File(path+"fuze.odb");
        try{
            Connection conn=DriverManager.getConnection("jdbc:ucanaccess://"+f);
            Statement s = null;
            s = conn.createStatement();
            ResultSet rs;
            rs = s.executeQuery("select * from SERVERS"); 
            int i = 0;
            while(rs.next()){++i;}
                
            String server_name = txt_servername.getText().trim();
            String IP = txt_ipadd.getText().trim();
            String user = txt_loginname.getText().trim();
            String password;
            int gid;
            String gname = combox_group.getSelectedItem().toString();
                
            rs = s.executeQuery("select GID from GROUPS WHERE GROUP_NAME = \"" +gname+"\" ;");
            rs.next();
            gid = rs.getInt("GID");
                
            password = new String(txt_password.getPassword()).trim();
                
            if((server_name.isEmpty() == false && IP.isEmpty() == false && user.isEmpty() == false && password.isEmpty() == false)){
                if(IP.substring(0,1).matches("[0-9]")){
                    //    if(IP.matches("[0-9]{0,3}[.][0-9]{0,3}[.][0-9]{0,3}[.][0-9]{0,3}"))
                    {
                    String q1 ="insert into SERVERS values("+ ++i +",\""+server_name+"\",\""+IP+"\",\""+user+"\",\""+password+"\","+gid+");";
                    try{ 
                        s.execute(q1);
                        final JPanel panel = new JPanel();
                        JOptionPane.showMessageDialog(panel,server_name+" "+"Server added successfully.","Server",JOptionPane.INFORMATION_MESSAGE);
                         MainGUI.isNewSeradded = true;
                    }
                    catch(Exception e){
                        final JPanel panel = new JPanel();
                        JOptionPane.showMessageDialog(panel,IP+" "+"Server already exites ..1"+e,"Server",JOptionPane.INFORMATION_MESSAGE);
                    }
                    }
                }
                else if(IP.substring(0,1).matches("[a-z]") || IP.substring(0,1).matches("[A-Z]")){
                    String q1 ="insert into SERVERS values("+ ++i +",\""+server_name+"\",\""+IP+"\",\""+user+"\",\""+password+"\","+gid+");";
                    try{ 
                        s.execute(q1);
                        final JPanel panel = new JPanel();
                        JOptionPane.showMessageDialog(panel,server_name+" "+"Server added successfully.","Server",JOptionPane.INFORMATION_MESSAGE);
                        MainGUI.isNewSeradded = true;
                    }
                    catch(Exception e){
                        final JPanel panel = new JPanel();
                        JOptionPane.showMessageDialog(panel,IP+" "+"Server already exites ..1","Server",JOptionPane.INFORMATION_MESSAGE);
                    }
                }                        
                else{
                    final JPanel panel = new JPanel();
                    JOptionPane.showMessageDialog(panel, "Check IP address","IP address",JOptionPane.WARNING_MESSAGE);
                }
              
            }
            else{
                final JPanel panel = new JPanel();
                JOptionPane.showMessageDialog(panel,"Please check","Information",JOptionPane.WARNING_MESSAGE);
            }
          
            }
            catch(Exception e){
                System.out.print("error "+e);
            }
        
    }//GEN-LAST:event_btn_saveActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
    }//GEN-LAST:event_formWindowActivated

    private void combox_groupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combox_groupActionPerformed
    }//GEN-LAST:event_combox_groupActionPerformed
  
    /**
     * @param args the command line arguments
     */
//
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_save;
    private javax.swing.JComboBox combox_group;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lbl_loginname;
    private javax.swing.JLabel lbl_password;
    private javax.swing.JLabel lbl_servername;
    private javax.swing.JTextField txt_ipadd;
    private javax.swing.JTextField txt_loginname;
    private javax.swing.JPasswordField txt_password;
    private javax.swing.JTextField txt_servername;
    // End of variables declaration//GEN-END:variables
}
